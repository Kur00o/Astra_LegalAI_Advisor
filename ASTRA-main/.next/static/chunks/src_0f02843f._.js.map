{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ASTRA/ASTRA-main/src/ai/flows/analyze-legal-clauses.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview A legal clause analysis AI agent.\n *\n * - analyzeLegalClauses - A function that handles the legal clause analysis process.\n * - AnalyzeLegalClausesInput - The input type for the analyzeLegalClauses function.\n * - AnalyzeLegalClausesOutput - The return type for the analyzeLegalClauses function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AnalyzeLegalClausesInputSchema = z.object({\n  documentText: z\n    .string()\n    .describe('The text content of the legal document to analyze.'),\n  jurisdiction: z.string().describe('The legal jurisdiction to consider for the analysis.'),\n});\nexport type AnalyzeLegalClausesInput = z.infer<typeof AnalyzeLegalClausesInputSchema>;\n\nconst AnalyzeLegalClausesOutputSchema = z.object({\n  clauseAnalysis: z.array(\n    z.object({\n      clause: z.string().describe('The specific legal clause being analyzed.'),\n      riskLevel: z\n        .enum(['low', 'medium', 'high'])\n        .describe('The risk level associated with this clause.'),\n      explanation: z\n        .string()\n        .describe('An explanation of the potential risks or unusual terms in the clause.'),\n    })\n  ).describe('An analysis of the legal clauses in the document.'),\n});\nexport type AnalyzeLegalClausesOutput = z.infer<typeof AnalyzeLegalClausesOutputSchema>;\n\nexport async function analyzeLegalClauses(input: AnalyzeLegalClausesInput): Promise<AnalyzeLegalClausesOutput> {\n  return analyzeLegalClausesFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'analyzeLegalClausesPrompt',\n  input: {schema: AnalyzeLegalClausesInputSchema},\n  output: {schema: AnalyzeLegalClausesOutputSchema},\n  prompt: `You are an AI legal assistant specializing in analyzing legal clauses to identify potential risks or unusual terms.\n\n  Your analysis must be tailored to the laws and regulations of the following jurisdiction: {{{jurisdiction}}}.\n\n  Analyze the following legal document and identify potentially risky or unusual clauses. For each clause, determine the risk level (low, medium, or high) and provide a detailed explanation based on the specified jurisdiction.\n\n  Document Text: {{{documentText}}}\n  `,\n});\n\nconst analyzeLegalClausesFlow = ai.defineFlow(\n  {\n    name: 'analyzeLegalClausesFlow',\n    inputSchema: AnalyzeLegalClausesInputSchema,\n    outputSchema: AnalyzeLegalClausesOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAqCsB,sBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ASTRA/ASTRA-main/src/ai/flows/legal-chatbot.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview A legal chatbot that can answer questions with multimodal context.\n *\n * - legalChatbot - A function that handles a chatbot conversation turn.\n * - LegalChatbotInput - The input type for the legalChatbot function.\n * - LegalChatbotOutput - The return type for the legalChatbot function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst MessageSchema = z.object({\n    role: z.enum(['user', 'assistant', 'tool']),\n    content: z.string(),\n    filePreview: z.string().optional(),\n    fileName: z.string().optional(),\n    name: z.string().optional(), // For tool requests/responses\n});\n\nconst LegalChatbotInputSchema = z.object({\n  query: z.string().describe('The user\\'s current question or message.'),\n  jurisdiction: z.string().describe('The legal jurisdiction to consider for the response.'),\n  documentDataUri: z.string().optional().describe(\n    \"An optional document or image file provided by the user for context, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n  ),\n  history: z.array(MessageSchema).describe('The history of the conversation so far.'),\n});\nexport type LegalChatbotInput = z.infer<typeof LegalChatbotInputSchema>;\n\nconst LegalChatbotOutputSchema = z.object({\n  response: z.string().describe('The AI\\'s response to the user\\'s query.'),\n});\nexport type LegalChatbotOutput = z.infer<typeof LegalChatbotOutputSchema>;\n\nexport async function legalChatbot(input: LegalChatbotInput): Promise<LegalChatbotOutput> {\n  const response = await legalChatbotFlow(input);\n  return { response };\n}\n\nconst prompt = ai.definePrompt({\n  name: 'legalChatbotPrompt',\n  input: {schema: LegalChatbotInputSchema},\n  prompt: `You are an expert attorney providing legal advice. Your goal is to give direct, actionable answers to the user's questions based on the provided context. Do not include disclaimers about not being a lawyer.\n\n  Your response must be tailored to the laws and regulations of the following jurisdiction: {{{jurisdiction}}}.\n  \n  Current time: ${new Date().toISOString()}\n\n  Conversation History:\n  {{#each history}}\n  {{#if name}}\n  Tool Response ({{name}}): {{content}}\n  {{else}}\n  {{role}}: {{content}}\n  {{/if}}\n  {{/each}}\n  \n  Current User Query: {{{query}}}\n  {{#if documentDataUri}}\n  The user has also provided the following file for context:\n  {{media url=documentDataUri}}\n  {{/if}}\n\n  Please provide a direct and clear legal response to the current user query, respecting the laws of {{{jurisdiction}}}.\n  `,\n});\n\nconst legalChatbotFlow = ai.defineFlow(\n  {\n    name: 'legalChatbotFlow',\n    inputSchema: LegalChatbotInputSchema,\n    outputSchema: z.string(),\n  },\n  async (input) => {\n    \n    const llmResponse = await prompt(input);\n    \n    return llmResponse.text;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAqCsB,eAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ASTRA/ASTRA-main/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ASTRA/ASTRA-main/src/components/ui/accordion.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,YAAY,wKAAA,CAAA,OAAuB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG;AAE5B,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,SAAyB;QAAC,WAAU;kBACnC,cAAA,6LAAC,wKAAA,CAAA,UAA0B;YACzB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gIACA;YAED,GAAG,KAAK;;gBAER;8BACD,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW;AAErE,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,UAA0B;QACzB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,6LAAC;YAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;sBAAa;;;;;;;;;;;;AAIjD,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ASTRA/ASTRA-main/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ASTRA/ASTRA-main/src/app/dashboard/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useCallback, useRef, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { analyzeLegalClauses, AnalyzeLegalClausesOutput } from '@/ai/flows/analyze-legal-clauses';\nimport { legalChatbot } from '@/ai/flows/legal-chatbot';\nimport { Loader2, FileCode, Bot, Search, ZoomIn, ZoomOut, RotateCw, Upload, Send, Globe } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport { cn } from '@/lib/utils';\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';\nimport { Textarea } from '@/components/ui/textarea';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { useRouter } from 'next/navigation';\n\ninterface AssistantMessage {\n    role: 'user' | 'assistant';\n    content: string;\n}\n\ninterface Jurisdiction {\n  code: string;\n  name: string;\n}\n\nexport default function DashboardPage() {\n  const [documentText, setDocumentText] = useState('');\n  const [fileName, setFileName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState<AnalyzeLegalClausesOutput | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [assistantQuery, setAssistantQuery] = useState('');\n  const [isAssistantLoading, setIsAssistantLoading] = useState(false);\n  const [assistantMessages, setAssistantMessages] = useState<AssistantMessage[]>([\n      { role: 'assistant', content: \"I'm here to help with questions about your document. Ask me anything!\" }\n  ]);\n  const [activeAccordionItems, setActiveAccordionItems] = useState([\"analysis\"]);\n  const [jurisdiction, setJurisdiction] = useState<Jurisdiction | null>(null);\n  const router = useRouter();\n\n  useEffect(() => {\n    const storedJurisdiction = localStorage.getItem('jurisdiction');\n    if (storedJurisdiction) {\n      setJurisdiction(JSON.parse(storedJurisdiction));\n    } else {\n        router.push('/jurisdiction');\n    }\n  }, [router]);\n\n  const [panelsWidth, setPanelsWidth] = useState({ left: 66, right: 34 });\n  const [assistantPanelHeight, setAssistantPanelHeight] = useState(40); // Initial height in percentage\n  const isResizingPanels = useRef(false);\n  const isResizingAssistant = useRef(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const rightPanelRef = useRef<HTMLDivElement>(null);\n  const assistantScrollAreaRef = useRef<HTMLDivElement>(null);\n\n  const onDrop = useCallback((acceptedFiles: File[]) => {\n    const file = acceptedFiles[0];\n    if (file) {\n      if (file.type === 'text/plain' || file.name.endsWith('.txt')) {\n        setFileName(file.name);\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const text = e.target?.result as string;\n          setDocumentText(text);\n          setError(null);\n          handleAnalyze(text);\n        };\n        reader.onerror = () => {\n          setError('Failed to read the file. Please try another file.');\n          setFileName('');\n          setDocumentText('');\n        };\n        reader.readAsText(file);\n      } else {\n        setError('Unsupported file type. Please upload a .txt file.');\n      }\n    }\n  }, [jurisdiction]);\n\n  const { getRootProps, getInputProps, isDragActive, open } = useDropzone({\n    onDrop,\n    noClick: true,\n    noKeyboard: true,\n    accept: {\n        'text/plain': ['.txt'],\n    }\n  });\n\n  const handleAnalyze = async (text: string) => {\n    if (!text.trim()) {\n      setError('The document is empty.');\n      return;\n    }\n    if (!jurisdiction) {\n      setError('Please select a jurisdiction first.');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    setAnalysisResult(null);\n\n    try {\n        const analysis = await analyzeLegalClauses({ documentText: text, jurisdiction: jurisdiction.name });\n        setAnalysisResult(analysis);\n\n    } catch (e) {\n      setError('An error occurred during analysis. Please try again.');\n      console.error(e);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const handleReset = () => {\n    setAnalysisResult(null);\n    setAssistantMessages([\n      { role: 'assistant', content: \"I'm here to help with questions about your document. Ask me anything!\" }\n    ]);\n  };\n\n  const handleTextSelection = async () => {\n    const selectedText = window.getSelection()?.toString().trim();\n    if (selectedText && selectedText.length > 10) { \n        localStorage.setItem('deepSearchQuery', selectedText);\n        router.push('/dashboard/deep-search');\n    }\n  };\n\n  const scrollToAssistantBottom = () => {\n    setTimeout(() => {\n      const scrollableViewport = (assistantScrollAreaRef.current?.firstChild as HTMLElement)?.firstChild as HTMLElement;\n      if (scrollableViewport) {\n        scrollableViewport.scrollTop = scrollableViewport.scrollHeight;\n      }\n    }, 100);\n  };\n\n  const handleAssistantSend = async () => {\n    if (!assistantQuery.trim() || !documentText.trim() || !jurisdiction) return;\n\n    const newMessages: AssistantMessage[] = [...assistantMessages, { role: 'user', content: assistantQuery }];\n    setAssistantMessages(newMessages);\n    const currentQuery = assistantQuery;\n    setAssistantQuery('');\n    setIsAssistantLoading(true);\n    scrollToAssistantBottom();\n    \n    try {\n        const result = await legalChatbot({\n            query: currentQuery,\n            history: newMessages.slice(0, -1),\n            documentDataUri: `data:text/plain;base64,${btoa(documentText)}`,\n            jurisdiction: jurisdiction.name,\n        });\n        setAssistantMessages(prev => [...prev, { role: 'assistant', content: result.response }]);\n    } catch(e) {\n        console.error(e);\n        setAssistantMessages(prev => [...prev, { role: 'assistant', content: \"Sorry, I encountered an error. Please try again.\" }]);\n    } finally {\n        setIsAssistantLoading(false);\n        scrollToAssistantBottom();\n    }\n  };\n\n  const getRiskColor = (riskLevel: 'low' | 'medium' | 'high') => {\n    switch (riskLevel) {\n      case 'low':\n        return 'bg-green-100 text-green-800 border-green-200';\n      case 'medium':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'high':\n        return 'bg-red-100 text-red-800 border-red-200';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  const handleMouseDownPanels = (e: React.MouseEvent) => {\n    e.preventDefault();\n    isResizingPanels.current = true;\n    document.addEventListener('mousemove', handleMouseMovePanels);\n    document.addEventListener('mouseup', handleMouseUpPanels);\n  };\n\n  const handleMouseMovePanels = (e: MouseEvent) => {\n    if (isResizingPanels.current && containerRef.current) {\n      const containerRect = containerRef.current.getBoundingClientRect();\n      const newLeftWidth = ((e.clientX - containerRect.left) / containerRect.width) * 100;\n      \n      if (newLeftWidth > 25 && newLeftWidth < 75) { \n        setPanelsWidth({ left: newLeftWidth, right: 100 - newLeftWidth });\n      }\n    }\n  };\n\n  const handleMouseUpPanels = () => {\n    isResizingPanels.current = false;\n    document.removeEventListener('mousemove', handleMouseMovePanels);\n    document.removeEventListener('mouseup', handleMouseUpPanels);\n  };\n\n  const handleMouseDownAssistant = (e: React.MouseEvent) => {\n    e.preventDefault();\n    isResizingAssistant.current = true;\n    document.addEventListener('mousemove', handleMouseMoveAssistant);\n    document.addEventListener('mouseup', handleMouseUpAssistant);\n  };\n\n  const handleMouseMoveAssistant = (e: MouseEvent) => {\n    if (isResizingAssistant.current && rightPanelRef.current) {\n      const containerRect = rightPanelRef.current.getBoundingClientRect();\n      const newHeight = ((containerRect.bottom - e.clientY) / containerRect.height) * 100;\n\n      if (newHeight > 20 && newHeight < 80) {\n        setAssistantPanelHeight(newHeight);\n      }\n    }\n  };\n\n  const handleMouseUpAssistant = () => {\n    isResizingAssistant.current = false;\n    document.removeEventListener('mousemove', handleMouseMoveAssistant);\n    document.removeEventListener('mouseup', handleMouseUpAssistant);\n  };\n\n\n  return (\n    <>\n      <header className=\"flex items-center justify-between p-4 border-b bg-background\">\n          <h1 className=\"text-xl font-semibold font-serif\">Document Workspace</h1>\n          <div className=\"flex items-center gap-4\">\n              \n          </div>\n      </header>\n\n      <main ref={containerRef} className=\"flex-1 flex min-h-0 p-4 bg-secondary gap-1\">\n        <div style={{ width: `${panelsWidth.left}%` }}>\n            <Card className=\"h-full flex flex-col min-h-0 shadow-sm\">\n                <CardHeader className=\"flex-row items-center justify-between p-3 border-b\">\n                <div className=\"flex items-center gap-2 text-sm font-medium\">\n                    {fileName ? (\n                        <>\n                        <FileCode className=\"h-5 w-5 text-primary\" />\n                        <span>{fileName}</span>\n                        </>\n                    ) : (\n                            <span className=\"text-muted-foreground\">No document uploaded</span>\n                    )}\n                </div>\n                <div className=\"flex items-center gap-1\">\n                    <Button variant=\"ghost\" size=\"icon\"><Search className=\"h-5 w-5\" /></Button>\n                    <Button variant=\"ghost\" size=\"icon\"><ZoomOut className=\"h-5 w-5\" /></Button>\n                    <span className=\"text-sm font-semibold px-2\">100%</span>\n                    <Button variant=\"ghost\" size=\"icon\"><ZoomIn className=\"h-5 w-5\" /></Button>\n                    <Button variant=\"ghost\" size=\"icon\" onClick={handleReset}><RotateCw className=\"h-5 w-5\" /></Button>\n                    <Button variant=\"outline\" size=\"sm\" onClick={open}><Upload className=\"mr-2 h-4 w-4\" /> New Document</Button>\n                </div>\n            </CardHeader>\n            <CardContent className=\"flex-1 p-2 mt-2 min-h-0\">\n                <ScrollArea className=\"h-full\">\n                <div {...getRootProps()} className={cn(\"h-full w-full rounded-lg\", isDragActive && \"border-primary border-dashed border-2 bg-primary/5\")}>\n                    <input {...getInputProps()} />\n                    {documentText ? (\n                        <div onMouseUp={handleTextSelection} className=\"p-6 whitespace-pre-wrap text-sm leading-relaxed\">\n                            {documentText}\n                        </div>\n                    ) : (\n                    <div className=\"flex flex-col items-center justify-center h-full text-center text-muted-foreground p-8 min-h-[500px]\" onClick={open}>\n                        <Upload className=\"h-16 w-16 mb-4 text-primary/50\" />\n                        <h3 className=\"text-lg font-semibold font-serif\">Upload your document</h3>\n                        <p className=\"text-sm\">Drag and drop a .txt file here or click to select a file.</p>\n                            {isDragActive && <p className=\"text-primary mt-2\">Drop the file to upload!</p>}\n                    </div>\n                    )}\n                </div>\n                </ScrollArea>\n            </CardContent>\n            </Card>\n        </div>\n\n        <div \n          className=\"w-2 cursor-col-resize bg-border hover:bg-primary transition-colors\"\n          onMouseDown={handleMouseDownPanels}\n        />\n\n        <div ref={rightPanelRef} style={{ width: `${panelsWidth.right}%` }} className=\"flex flex-col min-h-0\">\n            <div style={{ height: `${100 - assistantPanelHeight}%` }}>\n                <ScrollArea className=\"h-full\">\n                <div className=\"p-4 pl-5\">\n                    <h2 className=\"text-lg font-semibold mb-4 font-serif\">Document Tools</h2>\n                    <Accordion type=\"multiple\" className=\"w-full space-y-3\" value={activeAccordionItems} onValueChange={setActiveAccordionItems}>\n                    <Card className=\"shadow-sm\">\n                        <AccordionItem value=\"analysis\" className=\"border-none\">\n                        <AccordionTrigger className=\"p-4 font-semibold text-base hover:no-underline\">\n                            <div className=\"flex items-center gap-3\">\n                                <FileCode className=\"h-5 w-5\" /> Document Analysis\n                            </div>\n                        </AccordionTrigger>\n                        <AccordionContent className=\"px-4 pb-4\">\n                            {isLoading && !analysisResult ? (\n                            <div className=\"flex items-center justify-center p-4\">\n                                <Loader2 className=\"h-6 w-6 animate-spin text-primary\" />\n                            </div>\n                            ) : analysisResult ? (\n                            <div className=\"space-y-3\">\n                                {analysisResult.clauseAnalysis.map((item, index) => (\n                                <div key={index} className=\"p-3 border rounded-md bg-secondary\">\n                                    <div className=\"flex items-center justify-between mb-2\">\n                                    <h4 className=\"font-semibold text-sm\">Clause Analysis</h4>\n                                    <Badge variant=\"outline\" className={cn(\"text-xs border font-medium\", getRiskColor(item.riskLevel))}>\n                                        {item.riskLevel.charAt(0).toUpperCase() + item.riskLevel.slice(1)} Risk\n                                    </Badge>\n                                    </div>\n                                    <p className=\"text-xs text-muted-foreground italic mb-2\">\"{item.clause}\"</p>\n                                    <p className=\"text-xs\">{item.explanation}</p>\n                                </div>\n                                ))}\n                            </div>\n                            ) : (\n                            <div className=\"text-center text-muted-foreground text-sm p-4\">\n                                <p>Upload a document to analyze clauses for risks.</p>\n                            </div>\n                            )}\n                        </AccordionContent>\n                        </AccordionItem>\n                    </Card>\n\n                    </Accordion>\n                </div>\n            </ScrollArea>\n            </div>\n            \n            <div \n                className=\"h-2 cursor-row-resize bg-border hover:bg-primary transition-colors\"\n                onMouseDown={handleMouseDownAssistant}\n            />\n\n            <div style={{ height: `${assistantPanelHeight}%` }} className=\"flex flex-col min-h-0\">\n                <div className=\"p-4 pl-5 border-t flex-1 flex flex-col min-h-0\">\n                    <h3 className=\"text-base font-semibold mb-2 flex items-center gap-2 font-serif\"><Bot className=\"h-5 w-5\" /> Document Assistant</h3>\n                    <Card className=\"p-3 shadow-sm flex flex-col flex-1 min-h-0\">\n                        <ScrollArea className=\"flex-1 pr-2 -mr-2\" ref={assistantScrollAreaRef}>\n                            <div className=\"space-y-4\">\n                                {assistantMessages.map((msg, index) => (\n                                    <div key={index} className={cn(\"flex items-start gap-2\", msg.role === 'user' && 'justify-end')}>\n                                        {msg.role === 'assistant' && <Bot className=\"h-5 w-5 text-primary flex-shrink-0 mt-1\" />}\n                                        <div className={cn(\"rounded-lg p-2 text-sm max-w-[90%]\", msg.role === 'user' ? 'bg-primary text-primary-foreground' : 'bg-secondary')}>\n                                            {msg.content}\n                                        </div>\n                                    </div>\n                                ))}\n                                {isAssistantLoading && (\n                                    <div className=\"flex items-start gap-2\">\n                                        <Bot className=\"h-5 w-5 text-primary flex-shrink-0 mt-1\" />\n                                        <div className=\"rounded-lg p-2 text-sm bg-secondary flex items-center\">\n                                            <Loader2 className=\"h-4 w-4 animate-spin\" />\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                        </ScrollArea>\n                        <div className=\"mt-2 relative\">\n                            <Textarea \n                                placeholder=\"Ask about this document...\" \n                                className=\"bg-background pr-10 text-sm\" \n                                rows={2}\n                                value={assistantQuery}\n                                onChange={(e) => setAssistantQuery(e.target.value)}\n                                onKeyDown={(e) => {\n                                    if (e.key === 'Enter' && !e.shiftKey) {\n                                        e.preventDefault();\n                                        handleAssistantSend();\n                                    }\n                                }}\n                                />\n                                <Button \n                                    variant=\"ghost\" \n                                    size=\"icon\" \n                                    className=\"absolute right-1 top-1/2 -translate-y-1/2 h-8 w-8\"\n                                    onClick={handleAssistantSend}\n                                    disabled={!assistantQuery.trim() || !documentText.trim() || isAssistantLoading || !jurisdiction}\n                                >\n                                <Send className=\"h-4 w-4\" />\n                            </Button>\n                        </div>\n                    </Card>\n                </div>\n            </div>\n        </div>\n      </main>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}