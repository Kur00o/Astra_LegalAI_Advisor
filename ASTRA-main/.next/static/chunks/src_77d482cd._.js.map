{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ASTRA/ASTRA-main/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ASTRA/ASTRA-main/src/ai/flows/deep-search.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview A flow for performing deep searches on the web for legal queries.\n *\n * - deepSearch - A function that takes a query, searches the web, and returns related legal clauses.\n * - DeepSearchInput - The input type for the deepSearch function.\n * - DeepSearchOutput - The return type for the deepSearch function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport { getApiKey } from '../config';\n\n// Input Schema\nconst DeepSearchInputSchema = z.object({\n  query: z.string().describe('The legal query or topic to search for clauses about.'),\n  jurisdiction: z.string().describe('The legal jurisdiction to consider for the search.'),\n  documentDataUri: z.string().optional().describe(\n    \"An optional document or image file for context, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n  ),\n});\nexport type DeepSearchInput = z.infer<typeof DeepSearchInputSchema>;\n\n// Output Schema\nconst RelatedClauseSchema = z.object({\n    clauseText: z.string().describe(\"The exact text of the related legal clause found online.\"),\n    sourceTitle: z.string().describe(\"The title of the source website or document.\"),\n    sourceUrl: z.string().describe(\"The URL where the clause was found.\"),\n    relevance: z.string().describe(\"A brief explanation of how this clause relates to the user's query or document context.\")\n});\n\nconst DeepSearchOutputSchema = z.object({\n  relatedClauses: z.array(RelatedClauseSchema).describe(\"A list of relevant legal clauses discovered from the web search.\")\n});\nexport type DeepSearchOutput = z.infer<typeof DeepSearchOutputSchema>;\n\n\n// The exported function that will be called from the UI\nexport async function deepSearch(input: DeepSearchInput): Promise<DeepSearchOutput> {\n  return deepSearchFlow(input);\n}\n\n// Internal function to perform the web search with Brave\nasync function performWebSearch(query: string, jurisdiction: string): Promise<any> {\n  const braveApiKey = getApiKey('brave');\n  if (!braveApiKey) {\n    throw new Error('BRAVE_SEARCH_API_KEY is not set in environment variables.');\n  }\n\n  // Refine the query for better accuracy\n  const refinedQuery = `${query} legal clause in ${jurisdiction}`;\n\n  const response = await fetch(`https://api.search.brave.com/res/v1/web/search?q=${encodeURIComponent(refinedQuery)}`, {\n    headers: {\n        'Accept': 'application/json',\n        'X-Subscription-Token': braveApiKey,\n    },\n  });\n\n  if (!response.ok) {\n    throw new Error(`Brave Search API request failed with status ${response.status}`);\n  }\n\n  const data = await response.json();\n  return (data.web?.results || []).map((item: any) => ({\n      title: item.title,\n      url: item.url,\n      snippet: item.description,\n  }));\n}\n\nconst analysisPrompt = ai.definePrompt({\n    name: \"deepSearchClauseAnalysisPrompt\",\n    input: { schema: z.object({ query: z.string(), jurisdiction: z.string(), documentContext: z.string().optional(), searchResults: z.string() }) },\n    output: { schema: DeepSearchOutputSchema },\n    prompt: `You are a highly efficient legal research AI. Your task is to analyze the provided web search results and extract relevant legal clauses based on the user's query and a specific legal jurisdiction.\n\n    Jurisdiction for this search: \"{{jurisdiction}}\"\n    User's Query: \"{{query}}\"\n    \n    {{#if documentContext}}\n    The user has also provided the following document for additional context. Use it to inform the relevance of the clauses you find.\n    Context: {{media url=documentContext}}\n    {{/if}}\n\n    Analyze the search results below. For each relevant result, you must:\n    1. Extract the specific legal clause text.\n    2. Identify the source title and URL.\n    3. Provide a brief explanation of its relevance to the user's query, considering the laws of \"{{jurisdiction}}\".\n    \n    Return a list of these clauses. Focus on accuracy and relevance. Do not summarize; extract the clauses directly.\n\n    Search Results:\n    {{{searchResults}}}\n    `,\n});\n\n\n// Genkit Flow\nconst deepSearchFlow = ai.defineFlow(\n  {\n    name: 'deepSearchFlow',\n    inputSchema: DeepSearchInputSchema,\n    outputSchema: DeepSearchOutputSchema,\n  },\n  async (input) => {\n    const searchData = await performWebSearch(input.query, input.jurisdiction);\n\n    // Use top 5 results for speed and relevance\n    const relevantResults = searchData.slice(0, 5) || [];\n\n    if (relevantResults.length === 0) {\n        return {\n            relatedClauses: []\n        };\n    }\n    \n    const { output } = await analysisPrompt({\n        query: input.query,\n        jurisdiction: input.jurisdiction,\n        documentContext: input.documentDataUri,\n        searchResults: JSON.stringify(relevantResults, null, 2),\n    });\n\n    if (!output) {\n      return {\n        relatedClauses: []\n      };\n    }\n    \n    // Ensure we return valid sources even if the model hallucinates\n    const validClauses = (output.relatedClauses || []).filter((c: any) => c.sourceUrl && c.clauseText);\n\n    return {\n        relatedClauses: validClauses\n    };\n  }\n);\n"],"names":[],"mappings":";;;;;;IAwCsB,aAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ASTRA/ASTRA-main/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ASTRA/ASTRA-main/src/app/dashboard/deep-search/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useEffect, useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { deepSearch, DeepSearchOutput } from '@/ai/flows/deep-search';\nimport { Loader2, Search, FileUp, X, File as FileIcon, Link as LinkIcon, FileText } from 'lucide-react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { AlertTriangle } from 'lucide-react';\n\ninterface Jurisdiction {\n  code: string;\n  name: string;\n}\n\nexport default function DeepSearchPage() {\n  const [query, setQuery] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchResult, setSearchResult] = useState<DeepSearchOutput | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [file, setFile] = useState<File | null>(null);\n  const [filePreview, setFilePreview] = useState<string | null>(null);\n  const [jurisdiction, setJurisdiction] = useState<Jurisdiction | null>(null);\n\n  useEffect(() => {\n    const storedJurisdiction = localStorage.getItem('jurisdiction');\n    if (storedJurisdiction) {\n      setJurisdiction(JSON.parse(storedJurisdiction));\n    }\n\n    const searchQuery = localStorage.getItem('deepSearchQuery');\n    if (searchQuery) {\n      setQuery(searchQuery);\n      if (storedJurisdiction) {\n        handleSearch(searchQuery, undefined, JSON.parse(storedJurisdiction));\n      }\n      localStorage.removeItem('deepSearchQuery');\n    }\n  }, []);\n\n  const handleSearch = async (searchQuery?: string, searchFilePreview?: string, searchJurisdiction?: Jurisdiction) => {\n    const currentJurisdiction = searchJurisdiction || jurisdiction;\n    if (!currentJurisdiction) {\n      setError('Please select a jurisdiction first from the main page.');\n      return;\n    }\n\n    const currentQuery = typeof searchQuery === 'string' ? searchQuery : query;\n    const currentFile = searchFilePreview || filePreview;\n\n    if (!currentQuery.trim() && !currentFile) {\n      setError('A search query or a file is required to perform a DeepSearch.');\n      return;\n    }\n\n    setIsSearching(true);\n    setSearchResult(null);\n    setError(null);\n\n    try {\n      const result = await deepSearch({\n        query: currentQuery.trim() || 'Analyze the provided document.',\n        jurisdiction: currentJurisdiction.name,\n        documentDataUri: currentFile || undefined,\n      });\n      setSearchResult(result);\n    } catch (e) {\n      setError('DeepSearch failed. Please check your API keys and try again.');\n      console.error(e);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  \n  const onDrop = useCallback((acceptedFiles: File[]) => {\n    const uploadedFile = acceptedFiles[0];\n    if (uploadedFile) {\n        setFile(uploadedFile);\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const dataUri = reader.result as string;\n            setFilePreview(dataUri);\n            // Automatically trigger search when file is uploaded\n            handleSearch(query, dataUri, jurisdiction); \n        };\n        reader.readAsDataURL(uploadedFile);\n    }\n  }, [query, jurisdiction]);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ \n    onDrop,\n    accept: {\n        'image/*': ['.jpeg', '.png', '.gif', '.webp'],\n        'text/plain': ['.txt'],\n        'application/pdf': ['.pdf'],\n    }\n  });\n\n\n  const removeFile = () => {\n    setFile(null);\n    setFilePreview(null);\n    setError(null);\n  }\n\n  return (\n    <main className=\"flex flex-col h-full bg-secondary p-4 md:p-8\">\n      <Card className=\"w-full max-w-4xl mx-auto shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"font-serif text-2xl flex items-center gap-3\">\n            <Search className=\"h-6 w-6\" />\n            Intelligent DeepSearch\n          </CardTitle>\n          <CardDescription>\n            Find relevant legal clauses from across the web. Upload a document for context or enter a query to begin.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-col gap-4 mb-6\">\n            <div {...getRootProps()} className={`flex flex-col items-center justify-center p-6 border-2 border-dashed rounded-lg cursor-pointer transition-colors ${isDragActive ? 'border-primary bg-primary/5' : 'border-border hover:border-primary/50'}`}>\n                <input {...getInputProps()} />\n                <FileUp className=\"h-10 w-10 text-muted-foreground mb-2\" />\n                <p className=\"text-muted-foreground text-sm\">Drag & drop a file to automatically analyze, or enter a query below.</p>\n                <p className=\"text-xs text-muted-foreground mt-1\">Images, PDF, or .txt files supported</p>\n            </div>\n\n            {filePreview && (\n                <div className=\"relative p-2 border rounded-lg flex items-center gap-3\">\n                    {file?.type.startsWith('image/') ? (\n                        <Image src={filePreview} alt=\"Preview\" width={48} height={48} className=\"rounded-md object-cover\"/>\n                    ) : (\n                        <FileIcon className=\"h-8 w-8 text-muted-foreground\"/>\n                    )}\n                    <div className=\"text-sm\">\n                        <p className=\"font-medium\">{file?.name}</p>\n                        <p className=\"text-muted-foreground text-xs\">{Math.round((file?.size || 0) / 1024)} KB</p>\n                    </div>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"absolute top-1 right-1 h-6 w-6\" onClick={removeFile}>\n                        <X className=\"h-4 w-4\" />\n                    </Button>\n                </div>\n            )}\n            \n            <div className=\"flex gap-2\">\n                <Input\n                type=\"text\"\n                placeholder=\"Enter a legal topic to find related clauses...\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                onKeyDown={(e) => e.key === 'Enter' && handleSearch()}\n                className=\"text-base\"\n                />\n                <Button onClick={() => handleSearch()} disabled={isSearching} size=\"lg\">\n                {isSearching ? (\n                    <Loader2 className=\"h-5 w-5 animate-spin\" />\n                ) : (\n                    <Search className=\"h-5 w-5\" />\n                )}\n                <span className=\"ml-2 hidden md:inline\">Search</span>\n                </Button>\n            </div>\n          </div>\n\n\n          {error && (\n            <Alert variant=\"destructive\">\n                <AlertTriangle className=\"h-4 w-4\" />\n                <AlertTitle>Error</AlertTitle>\n                <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n          \n          {isSearching && (\n             <div className=\"text-center text-muted-foreground py-10 flex flex-col items-center gap-4\">\n              <Loader2 className=\"h-10 w-10 animate-spin text-primary\" />\n              <p className=\"font-serif\">Performing DeepSearch for related clauses...</p>\n            </div>\n          )}\n\n          {searchResult && (\n            <div className=\"space-y-6 mt-6\">\n              <h3 className=\"font-semibold text-xl mb-2 font-serif\">Discovered Clauses</h3>\n              {searchResult.relatedClauses.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {searchResult.relatedClauses.map((clause, index) => (\n                    <Card key={index} className=\"p-4 bg-secondary\">\n                      <blockquote className=\"border-l-4 border-primary pl-4 mb-3\">\n                        <p className=\"text-sm italic\">\"{clause.clauseText}\"</p>\n                      </blockquote>\n                      <p className=\"text-xs text-muted-foreground mb-3\"><strong className=\"text-foreground font-medium\">Relevance:</strong> {clause.relevance}</p>\n                      <div className=\"flex items-center gap-2 text-xs\">\n                          <LinkIcon className=\"h-3 w-3 text-primary\"/>\n                          <Link href={clause.sourceUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-primary hover:underline font-medium truncate\">\n                            {clause.sourceTitle}\n                          </Link>\n                      </div>\n                    </Card>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center text-muted-foreground py-10 flex flex-col items-center gap-4\">\n                    <FileText className=\"h-10 w-10 text-primary/50\" />\n                    <p className=\"font-serif\">No relevant clauses found.</p>\n                    <p className=\"text-sm\">Try refining your search query or uploading a different document.</p>\n                </div>\n              )}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}